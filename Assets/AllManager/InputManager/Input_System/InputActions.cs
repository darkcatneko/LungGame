//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/AllManager/InputManager/Input_System/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""19a22624-fb26-4a64-9c18-2389bd2ceabb"",
            ""actions"": [
                {
                    ""name"": ""Axes"",
                    ""type"": ""Value"",
                    ""id"": ""cfe15367-088a-4ba9-b581-0fe38ed8f0d4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f83c8cd3-1d9f-4f89-98b6-67532f928a70"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""e0221726-16ff-4f9e-a326-67d621c9ed8d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChargedAttack"",
                    ""type"": ""Button"",
                    ""id"": ""c27071bd-0072-41a2-bc93-c5e8534af6ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""50e9ff12-5239-41b8-9a54-c803a6200e46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""3bd9fa28-27fd-4c2c-8166-a627579afa91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""ec74cb09-b73d-4c42-9081-810e3a7308ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraRotation_Ctrl"",
                    ""type"": ""Button"",
                    ""id"": ""25155e47-a096-41a2-9d24-0e249c47a86d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraRotation_Alt"",
                    ""type"": ""Button"",
                    ""id"": ""ecd8a64c-36a3-47b2-bdeb-a8f1dc6c8e40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockEnemy"",
                    ""type"": ""Button"",
                    ""id"": ""b7749c9d-c30e-46d3-9379-01368dbfd75c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenSettings"",
                    ""type"": ""Button"",
                    ""id"": ""eabfa3a1-509e-49d7-ab5d-97b0432917a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""27088a3a-edf6-4569-a848-8513f7a8fac3"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c1c6eefc-43c0-4268-9e44-bd746d3ed48f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f5d377c2-106a-4810-b381-de18c350f318"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""075b99fb-b043-4599-87c4-efa77bd869fe"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""925c1896-7375-4908-b4a0-8d271f847b28"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""0ff59fef-e261-4802-800b-1d91a97cba84"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b734294d-4e92-4a79-9686-9786fe81fd98"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4f701b77-f997-4cd2-a3cc-1a0659db4c10"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bf77e98d-cf70-4c52-9895-40f2055d32b8"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1bb323ac-643b-464e-9b8c-a25439638358"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""d5e7a6f3-f53c-41b9-99b9-1d9df245a7f1"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c56b18f9-7482-4986-b665-0db662939da3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3ad141a2-c906-4dda-b624-2337fba34f62"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fb344178-edf0-4cb0-b328-3fca3de55a5c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""88245dde-b729-427e-a226-ac9ea9eb1625"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6101448f-03ec-4ae6-baa3-d7ee0c433ae4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""320317eb-6927-453c-ad4e-d90fed95d409"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69b4ad6d-f35a-4648-9673-3f46d59718ad"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7ee820f-50a1-4160-89b6-882cd8cb5a67"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3191069-101b-45cb-8fa3-752241d7452c"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e298520b-ccf5-4363-b28b-4de13a516ae3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChargedAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0b98d63-044b-403d-8004-c487c3f848db"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation_Ctrl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd7d38df-31e6-42c2-b141-c301c0fe2119"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotation_Alt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""766deac8-813e-4c3a-8ce7-42a1b23b3a4b"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockEnemy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fa467a6-e1a7-4c56-ac18-1afd7e614f5a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenSettings"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""c4d94103-9108-4795-ad69-756397233f10"",
            ""actions"": [
                {
                    ""name"": ""Dialogue"",
                    ""type"": ""Button"",
                    ""id"": ""fa0cbc04-a977-4ec5-8250-aa8ab77b4110"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BackPack"",
                    ""type"": ""Button"",
                    ""id"": ""fce7d081-b6da-42cb-b9ea-c575630cff38"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GameMenu"",
                    ""type"": ""Button"",
                    ""id"": ""d5059c55-a4de-4c03-959e-687700ea1395"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseUI"",
                    ""type"": ""Button"",
                    ""id"": ""dd80fbd6-6b16-4dd5-8118-fcdbe13bdfbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""16f0b5b6-0fae-43c1-ba37-2dff042f4323"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa9bc2f5-3569-45a8-ad9e-4a60a6256a37"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackPack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c24850b3-c677-42f7-b62d-eeca744d2883"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GameMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f47d863-15f2-44a9-b42b-3029a0c3b131"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Axes = m_Gameplay.FindAction("Axes", throwIfNotFound: true);
        m_Gameplay_Jump = m_Gameplay.FindAction("Jump", throwIfNotFound: true);
        m_Gameplay_Attack = m_Gameplay.FindAction("Attack", throwIfNotFound: true);
        m_Gameplay_ChargedAttack = m_Gameplay.FindAction("ChargedAttack", throwIfNotFound: true);
        m_Gameplay_Run = m_Gameplay.FindAction("Run", throwIfNotFound: true);
        m_Gameplay_Roll = m_Gameplay.FindAction("Roll", throwIfNotFound: true);
        m_Gameplay_Dash = m_Gameplay.FindAction("Dash", throwIfNotFound: true);
        m_Gameplay_CameraRotation_Ctrl = m_Gameplay.FindAction("CameraRotation_Ctrl", throwIfNotFound: true);
        m_Gameplay_CameraRotation_Alt = m_Gameplay.FindAction("CameraRotation_Alt", throwIfNotFound: true);
        m_Gameplay_LockEnemy = m_Gameplay.FindAction("LockEnemy", throwIfNotFound: true);
        m_Gameplay_OpenSettings = m_Gameplay.FindAction("OpenSettings", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Dialogue = m_UI.FindAction("Dialogue", throwIfNotFound: true);
        m_UI_BackPack = m_UI.FindAction("BackPack", throwIfNotFound: true);
        m_UI_GameMenu = m_UI.FindAction("GameMenu", throwIfNotFound: true);
        m_UI_CloseUI = m_UI.FindAction("CloseUI", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Axes;
    private readonly InputAction m_Gameplay_Jump;
    private readonly InputAction m_Gameplay_Attack;
    private readonly InputAction m_Gameplay_ChargedAttack;
    private readonly InputAction m_Gameplay_Run;
    private readonly InputAction m_Gameplay_Roll;
    private readonly InputAction m_Gameplay_Dash;
    private readonly InputAction m_Gameplay_CameraRotation_Ctrl;
    private readonly InputAction m_Gameplay_CameraRotation_Alt;
    private readonly InputAction m_Gameplay_LockEnemy;
    private readonly InputAction m_Gameplay_OpenSettings;
    public struct GameplayActions
    {
        private @GameInputActions m_Wrapper;
        public GameplayActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Axes => m_Wrapper.m_Gameplay_Axes;
        public InputAction @Jump => m_Wrapper.m_Gameplay_Jump;
        public InputAction @Attack => m_Wrapper.m_Gameplay_Attack;
        public InputAction @ChargedAttack => m_Wrapper.m_Gameplay_ChargedAttack;
        public InputAction @Run => m_Wrapper.m_Gameplay_Run;
        public InputAction @Roll => m_Wrapper.m_Gameplay_Roll;
        public InputAction @Dash => m_Wrapper.m_Gameplay_Dash;
        public InputAction @CameraRotation_Ctrl => m_Wrapper.m_Gameplay_CameraRotation_Ctrl;
        public InputAction @CameraRotation_Alt => m_Wrapper.m_Gameplay_CameraRotation_Alt;
        public InputAction @LockEnemy => m_Wrapper.m_Gameplay_LockEnemy;
        public InputAction @OpenSettings => m_Wrapper.m_Gameplay_OpenSettings;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Axes.started += instance.OnAxes;
            @Axes.performed += instance.OnAxes;
            @Axes.canceled += instance.OnAxes;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @ChargedAttack.started += instance.OnChargedAttack;
            @ChargedAttack.performed += instance.OnChargedAttack;
            @ChargedAttack.canceled += instance.OnChargedAttack;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @CameraRotation_Ctrl.started += instance.OnCameraRotation_Ctrl;
            @CameraRotation_Ctrl.performed += instance.OnCameraRotation_Ctrl;
            @CameraRotation_Ctrl.canceled += instance.OnCameraRotation_Ctrl;
            @CameraRotation_Alt.started += instance.OnCameraRotation_Alt;
            @CameraRotation_Alt.performed += instance.OnCameraRotation_Alt;
            @CameraRotation_Alt.canceled += instance.OnCameraRotation_Alt;
            @LockEnemy.started += instance.OnLockEnemy;
            @LockEnemy.performed += instance.OnLockEnemy;
            @LockEnemy.canceled += instance.OnLockEnemy;
            @OpenSettings.started += instance.OnOpenSettings;
            @OpenSettings.performed += instance.OnOpenSettings;
            @OpenSettings.canceled += instance.OnOpenSettings;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Axes.started -= instance.OnAxes;
            @Axes.performed -= instance.OnAxes;
            @Axes.canceled -= instance.OnAxes;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @ChargedAttack.started -= instance.OnChargedAttack;
            @ChargedAttack.performed -= instance.OnChargedAttack;
            @ChargedAttack.canceled -= instance.OnChargedAttack;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @CameraRotation_Ctrl.started -= instance.OnCameraRotation_Ctrl;
            @CameraRotation_Ctrl.performed -= instance.OnCameraRotation_Ctrl;
            @CameraRotation_Ctrl.canceled -= instance.OnCameraRotation_Ctrl;
            @CameraRotation_Alt.started -= instance.OnCameraRotation_Alt;
            @CameraRotation_Alt.performed -= instance.OnCameraRotation_Alt;
            @CameraRotation_Alt.canceled -= instance.OnCameraRotation_Alt;
            @LockEnemy.started -= instance.OnLockEnemy;
            @LockEnemy.performed -= instance.OnLockEnemy;
            @LockEnemy.canceled -= instance.OnLockEnemy;
            @OpenSettings.started -= instance.OnOpenSettings;
            @OpenSettings.performed -= instance.OnOpenSettings;
            @OpenSettings.canceled -= instance.OnOpenSettings;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Dialogue;
    private readonly InputAction m_UI_BackPack;
    private readonly InputAction m_UI_GameMenu;
    private readonly InputAction m_UI_CloseUI;
    public struct UIActions
    {
        private @GameInputActions m_Wrapper;
        public UIActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Dialogue => m_Wrapper.m_UI_Dialogue;
        public InputAction @BackPack => m_Wrapper.m_UI_BackPack;
        public InputAction @GameMenu => m_Wrapper.m_UI_GameMenu;
        public InputAction @CloseUI => m_Wrapper.m_UI_CloseUI;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Dialogue.started += instance.OnDialogue;
            @Dialogue.performed += instance.OnDialogue;
            @Dialogue.canceled += instance.OnDialogue;
            @BackPack.started += instance.OnBackPack;
            @BackPack.performed += instance.OnBackPack;
            @BackPack.canceled += instance.OnBackPack;
            @GameMenu.started += instance.OnGameMenu;
            @GameMenu.performed += instance.OnGameMenu;
            @GameMenu.canceled += instance.OnGameMenu;
            @CloseUI.started += instance.OnCloseUI;
            @CloseUI.performed += instance.OnCloseUI;
            @CloseUI.canceled += instance.OnCloseUI;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Dialogue.started -= instance.OnDialogue;
            @Dialogue.performed -= instance.OnDialogue;
            @Dialogue.canceled -= instance.OnDialogue;
            @BackPack.started -= instance.OnBackPack;
            @BackPack.performed -= instance.OnBackPack;
            @BackPack.canceled -= instance.OnBackPack;
            @GameMenu.started -= instance.OnGameMenu;
            @GameMenu.performed -= instance.OnGameMenu;
            @GameMenu.canceled -= instance.OnGameMenu;
            @CloseUI.started -= instance.OnCloseUI;
            @CloseUI.performed -= instance.OnCloseUI;
            @CloseUI.canceled -= instance.OnCloseUI;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IGameplayActions
    {
        void OnAxes(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnChargedAttack(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnCameraRotation_Ctrl(InputAction.CallbackContext context);
        void OnCameraRotation_Alt(InputAction.CallbackContext context);
        void OnLockEnemy(InputAction.CallbackContext context);
        void OnOpenSettings(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnDialogue(InputAction.CallbackContext context);
        void OnBackPack(InputAction.CallbackContext context);
        void OnGameMenu(InputAction.CallbackContext context);
        void OnCloseUI(InputAction.CallbackContext context);
    }
}
